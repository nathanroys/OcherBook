# TODO
# modern cmake
# git submodules
# clang-format
# features requires/conflicts
# 3rd party external builds
# help
# cross compile
# consume config file


cmake_minimum_required(VERSION 3.1)

project(ocherbook)
set(ROOT_DIR "${CMAKE_CURRENT_SOURCE_DIR}")
list(APPEND CMAKE_MODULE_PATH "${ROOT_DIR}/cmake")

#
# Global compiler flags
#
if(NOT CMAKE_BUILD_TYPE)
	set(CMAKE_BUILD_TYPE Debug)
endif()
message("build type ${CMAKE_BUILD_TYPE}")
set(_CFLAGS_WARN "-Wall -Wextra -Wno-unused-parameter -Wwrite-strings -Wformat")
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_C_FLAGS_RELEASE "-Os -DNDEBUG")
set(CMAKE_C_FLAGS_DEBUG   "-g -O0 -DDEBUG")
set(CMAKE_CXX_FLAGS_RELEASE "-Os -DNDEBUG")
set(CMAKE_CXX_FLAGS_DEBUG   "-g -O0 -DDEBUG")
set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS} ${_CFLAGS_WARN}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${_CFLAGS_WARN}")
if("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
	set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS} ${_CFLAGS_DBG}")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${_CFLAGS_DBG}")
endif()

#
# Global paths
#
set(THIRD_PARTY_DIR "${ROOT_DIR}/third-party")

#
# Global variables
#

#
# Features
#
# Features turned on by the user are TRUE.
# Features turned off by the user are FALSE.
# Features implicitly turned on are 1.
# Features implicitly turned off are 0.
#

include(${ROOT_DIR}/cmake/config.cmake)
#include(${ROOT_DIR}/cmake/features/xxx)

if(NOT CMAKE_CROSSCOMPILING)
enable_testing()
endif()

find_package(Qt4 REQUIRED)

include(${QT_USE_FILE})
add_definitions(${QT_DEFINITIONS})

add_subdirectory(third-party/mxml)
add_subdirectory(third-party/zlib)
add_subdirectory(ocher)
